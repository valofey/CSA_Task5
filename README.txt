Вариант 3

Задание: Базу данных разделяют два типа
процессов – читатели и писатели. Читатели выполняют транзакции, которые
просматривают записи базы данных, транзакции писателей и просматривают
и изменяют записи. Предполагается, что в начале БД находится в
непротиворечивом состоянии (например, если каждый элемент — число, то
они все отсортированы). Каждая отдельная транзакция переводит БД из
одного непротиворечивого состояния в другое. Для предотвращения
взаимного влияния транзакций процесс-писатель должен иметь
исключительный доступ к БД. Если к БД не обращается ни один из 
процессов-писателей, то выполнять транзакции могут одновременно сколько 
угодно читателей. Создать многопоточное приложение с потоками писателями 
и потоками-читателями. Реализовать решение, используя семафоры.

В качестве базы данных используется структура List. Писатель пишет в нее стихи, а читатели - обзоры на них.
При этом читатели могут писать одновременно, а писатели нет.

Для синхронизации используется считающий семафор с счетчиком 2 (так как реализовано только 2 читателя).
При желании, программа легко масштабируется до любого количества читателей и писателей увеличением счетчика и
рефакторингом логики взятия контроля писателя для этого счетчика (просто забираем все очки в цикле).

Технически, repl.it - это дистрибутив ubuntu в красивой обертке, поэтому задание можно считать выполненным на 
ОС Linux. 
